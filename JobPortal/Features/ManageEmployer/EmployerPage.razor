@page "/employer"
@inject IMediator Mediator
@using JobPortal.Shared.Features.Home.Shared;
@using JobPortal.Shared.Features.ManageEmployer;

@if ( _employer == null)
{
    <p><em>Loading Profile...</em></p>
}
else
{
    @foreach(var Employer in _employer)
    {
        <h3 class="mt-5 mb-4">@Employer.EmployerName</h3>
        <h4 class="mt-5 mb-4">@Employer.EmployerEmail</h4>
        <h4 class="mt-5 mb-4">@Employer.EmployerPhone</h4>

    }
}

@code {
    private IEnumerable<Employers>? _employer;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Mediator.Send(new GetEmployerRequest());
            _employer = response.Employers.Select(x => new Employers
            {
                Id = x.Id,
                EmployerName = x.EmployerName,
                EmployerEmail = x.EmployerEmail,
                EmployerPhone = x.EmployerPhone,
                Location = x.Location,
                Description = x.Description,
                Image = x.Image
            });


        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading job data: {ex.Message}");
        }
    }
    //protected override async Task OnInitializedAsync()
    //{
    //    try
    //    {
    //        //var allJobs = await Http.GetFromJsonAsync<IEnumerable<Jobs>>("jobs/jobs_data.json");
    //        var response = await Mediator.Send(new GetJobsRequest());
    //        var allJobs = response.Jobs.Select(x => new Jobs
    //            {
    //                Id = x.Id,
    //                Name = x.Name,
    //                EmployerName = x.EmployerName,
    //                PLanguage = x.PLanguage,
    //                FrameworkName = x.FrameworkName,
    //                JobType = x.JobType,
    //                Opento = x.Opento,
    //                Image = x.Image,
    //                Description = x.Description,
    //                Location = x.Location,
    //                Salary = x.Salary,
    //                TimeInMinutes = x.TimeInMinutes,
    //                CreatedDate = x.CreatedDate
    //            });
    //    }
    //    catch (HttpRequestException ex)
    //    {
    //        Console.WriteLine($"There was a problem loading job data: {ex.Message}");
    //    }

    }