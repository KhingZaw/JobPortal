@page "/"
@inject NavigationManager NavManager
@inject IMediator Mediator
@using JobPortal.Shared.Features.Home.Shared;

<PageTitle>JobPortal</PageTitle>


@if ( _jobs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3 class="font-weight-light"> <a href="add-job">Add Job</a></h3>

    <JobSearch /> 

    <div class="grid">
        @foreach (var job in _jobs)
        {
            <JobCard Job="job" OnSelected="HandleJobSelected" />
        }
    </div>
}

@code {

    private IEnumerable<Jobs>? _jobs;
    private Jobs? _selectedjob;

    //protected override async Task OnInitializedAsync()
    //{   
    //    try
    //    {
    //        _jobs = await Http.GetFromJsonAsync<IEnumerable<Jobs>>("jobs/jobs_data.json");
    //    }
    //    catch (HttpRequestException ex)
    //    {
    //        Console.WriteLine($"There was a problem loading job data: {ex.Message}");
    //    }

    //}
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Mediator.Send(new GetJobsRequest());
            _jobs = response.Jobs.Select(x => new Jobs
                {
                    Id = x.Id,
                    Name = x.Name,
                    Image = x.Image,
                    Description = x.Description,
                    Location = x.Location,
                    Salary = x.Salary,
                    TimeInMinutes = x.TimeInMinutes,
                    CreatedDate = x.CreatedDate
                });
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading job data: {ex.Message}");
        }
    }
    private void HandleJobSelected(Jobs job)
        => _selectedjob = job;

}
