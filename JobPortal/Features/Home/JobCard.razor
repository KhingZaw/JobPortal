<div class="parent_card">
    <div class="card shadow" style="">
        <div class=" card-left bule-bg">
            <img src="@Job.Image" class="card_img_left" alt="@Job.Name"/>
        </div>
            <div class="card_center">
                <h5 class="card-name">@Job.Name</h5>
                <h5 class="card-employerName">@Job.EmployerName</h5>
                <h6 class="card-text">@Job.JobType</h6>
                <p class="card-text">@Job.Description</p>  
               <div>
                <span class="oi oi-map-marker"> </span> @Job.Location &nbsp;
                <i class="bi bi-calendar"> </i> @Job.CreatedDate &nbsp;
                <i class="bi bi-clock"> </i> @Job.CreatedTime &nbsp;
                @*<i class="bi bi-coin"> </i> @Job.Salary*@
               </div>
            <div class="d-flex justify-content-between mb-3">
                <button class="btn btn-primary" title="View" @onclick="@(async () => await OnSelected.InvokeAsync(Job))">
                  <i class="bi bi-binoculars"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@code 
{
    [Parameter, EditorRequired] public Jobs Job{ get; set; } = default!;
    [Parameter, EditorRequired] public EventCallback<Jobs> OnSelected { get; set; }
   
}